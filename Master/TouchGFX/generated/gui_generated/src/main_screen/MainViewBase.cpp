/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    camera.setPosition(0, 0, 800, 480);
    Camera.setPosition(160, 0, 640, 480);
    Camera.setColor(touchgfx::Color::getColorFromRGB(237, 237, 237));
    camera.add(Camera);

    add(camera);

    backgrounds_and_lines.setPosition(0, 0, 800, 480);
    Background.setPosition(0, 0, 160, 480);
    Background.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backgrounds_and_lines.add(Background);

    title_background.setPosition(0, 0, 160, 25);
    title_background.setColor(touchgfx::Color::getColorFromRGB(80, 119, 140));
    backgrounds_and_lines.add(title_background);

    screen_title.setPosition(0, 0, 160, 25);
    screen_title.setColor(touchgfx::Color::getColorFromRGB(232, 246, 251));
    screen_title.setLinespacing(0);
    screen_title.setTypedText(touchgfx::TypedText(T___SINGLEUSE_87BD));
    backgrounds_and_lines.add(screen_title);

    crosshair_x.setPosition(0, 0, 800, 480);
    crosshair_xPainter.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    crosshair_x.setPainter(crosshair_xPainter);
    crosshair_x.setStart(160, 240);
    crosshair_x.setEnd(800, 240);
    crosshair_x.setLineWidth(2);
    crosshair_x.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    backgrounds_and_lines.add(crosshair_x);

    crosshair_y.setPosition(0, 0, 800, 480);
    crosshair_yPainter.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    crosshair_y.setPainter(crosshair_yPainter);
    crosshair_y.setStart(480, 0);
    crosshair_y.setEnd(480, 480);
    crosshair_y.setLineWidth(2);
    crosshair_y.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    backgrounds_and_lines.add(crosshair_y);

    divisore_camera.setPosition(0, 0, 800, 480);
    divisore_cameraPainter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    divisore_camera.setPainter(divisore_cameraPainter);
    divisore_camera.setStart(160, 0);
    divisore_camera.setEnd(160, 480);
    divisore_camera.setLineWidth(1);
    divisore_camera.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    backgrounds_and_lines.add(divisore_camera);

    divisore_titolo.setPosition(0, 0, 800, 480);
    divisore_titoloPainter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    divisore_titolo.setPainter(divisore_titoloPainter);
    divisore_titolo.setStart(0, 25);
    divisore_titolo.setEnd(160, 25);
    divisore_titolo.setLineWidth(1);
    divisore_titolo.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    backgrounds_and_lines.add(divisore_titolo);

    settings_button.setXY(5, 415);
    settings_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_SETTINGS_APPLICATIONS_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_SETTINGS_APPLICATIONS_50_50_E8F6FB_SVG_ID));
    settings_button.setIconXY(6, 6);
    settings_button.setAction(buttonCallback);
    backgrounds_and_lines.add(settings_button);

    add(backgrounds_and_lines);

    scrollableContainer1.setPosition(0, 35, 160, 375);
    scrollableContainer1.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    scrollableContainer1.setScrollbarsAlpha(255);
    main_page_data1.setXY(0, -10);
    scrollableContainer1.add(main_page_data1);

    main_page_data1_1.setXY(0, 40);
    scrollableContainer1.add(main_page_data1_1);

    main_page_data1_1_1.setXY(0, 90);
    scrollableContainer1.add(main_page_data1_1_1);

    main_page_data1_2.setXY(0, 140);
    scrollableContainer1.add(main_page_data1_2);

    main_page_data1_1_2.setXY(0, 190);
    scrollableContainer1.add(main_page_data1_1_2);

    main_page_data1_1_1_1.setXY(0, 240);
    scrollableContainer1.add(main_page_data1_1_1_1);

    main_page_data1_3.setXY(0, 290);
    scrollableContainer1.add(main_page_data1_3);

    main_page_data1_1_3.setXY(0, 340);
    scrollableContainer1.add(main_page_data1_1_3);

    main_page_data1_1_1_2.setXY(0, 390);
    scrollableContainer1.add(main_page_data1_1_1_2);

    add(scrollableContainer1);
}

MainViewBase::~MainViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MainViewBase::setupScreen()
{
    main_page_data1.initialize();
    main_page_data1_1.initialize();
    main_page_data1_1_1.initialize();
    main_page_data1_2.initialize();
    main_page_data1_1_2.initialize();
    main_page_data1_1_1_1.initialize();
    main_page_data1_3.initialize();
    main_page_data1_1_3.initialize();
    main_page_data1_1_1_2.initialize();
}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &settings_button)
    {
        //Interaction1
        //When settings_button clicked change screen to Settings
        //Go to Settings with screen transition towards West
        application().gotoSettingsScreenWipeTransitionWest();
    }
}
